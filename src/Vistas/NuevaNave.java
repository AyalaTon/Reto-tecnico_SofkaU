/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import BD.Conexion;
import Clases.NaveEspacial;
import Clases.NoTripulada;
import Clases.Origen;
import Clases.Tripulada;
import Clases.VehiculoLanzadera;
import Fabrica.Fabrica;
import Interfaces.IControladorNaves;
import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author milto
 */
public class NuevaNave extends javax.swing.JFrame {
    private IControladorNaves ICN;
    private String imagen = "";
//    private List<Origen> origenes;
    /**
     * Creates new form NuevaNave
     */
    public NuevaNave() {
        initComponents();
        this.setTitle("Nueva Nave espacial");
        this.setLocationRelativeTo(null);
        this.radioBtnTripulada.setSelected(true);
        ImagenNave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/nave-default.png")));
        ICN = Fabrica.getInstance().getIControladorNaves();
        this.origenNave.removeAllItems();
        for(Origen p : ICN.getOrigenes()){
            this.origenNave.addItem(p.getNombre());
            System.out.println((p.getNombre()));
        }
    }
    public byte[] convertirImagen(String path) throws IOException {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        BufferedImage img = ImageIO.read(new File(path));
        ImageIO.write(img, "png", baos);
        baos.flush();
        String base64String = Base64.encode(baos.toByteArray());
        baos.close();
        return Base64.decode(base64String);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        checkTipo = new javax.swing.ButtonGroup();
        jPanel12 = new javax.swing.JPanel();
        ImagenNave = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nombreNave = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnImagen = new javax.swing.JButton();
        btnGuardar1 = new javax.swing.JButton();
        finActividad = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        radioBtnTripulada = new javax.swing.JRadioButton();
        radioBtnNoTripulada = new javax.swing.JRadioButton();
        radioBtnLanzadera = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        empujeNave = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        tripulantesNave = new javax.swing.JSpinner();
        capacidadNave = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        origenNave = new javax.swing.JComboBox<>();
        propositoNave = new javax.swing.JComboBox<>();
        nuevoOrigen = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        pesoNave = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        combustibleNave = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(680, 415));
        setMinimumSize(new java.awt.Dimension(680, 415));
        setPreferredSize(new java.awt.Dimension(680, 415));
        setResizable(false);
        setSize(new java.awt.Dimension(680, 415));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        jPanel12.setLayout(null);
        jPanel12.add(ImagenNave);
        ImagenNave.setBounds(0, 0, 320, 300);

        getContentPane().add(jPanel12);
        jPanel12.setBounds(340, 10, 320, 300);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Fin de actividad:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 220, 120, 19);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Tipo:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 10, 120, 19);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Origen:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 110, 120, 19);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Empuje (Toneladas):");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 140, 160, 19);

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Combustible:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(40, 170, 120, 19);

        nombreNave.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        getContentPane().add(nombreNave);
        nombreNave.setBounds(170, 80, 150, 21);

        btnCancelar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar);
        btnCancelar.setBounds(490, 350, 80, 26);

        btnImagen.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btnImagen.setText("Imagen");
        btnImagen.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagenActionPerformed(evt);
            }
        });
        getContentPane().add(btnImagen);
        btnImagen.setBounds(340, 320, 70, 26);

        btnGuardar1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btnGuardar1.setText("Ingresar");
        btnGuardar1.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar1);
        btnGuardar1.setBounds(580, 350, 80, 26);

        finActividad.setDateFormatString("d/MM/yyyy");
        getContentPane().add(finActividad);
        finActividad.setBounds(170, 220, 150, 21);

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Nombre:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(40, 80, 120, 19);

        checkTipo.add(radioBtnTripulada);
        radioBtnTripulada.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        radioBtnTripulada.setText("Tripulada");
        radioBtnTripulada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnTripuladaActionPerformed(evt);
            }
        });
        getContentPane().add(radioBtnTripulada);
        radioBtnTripulada.setBounds(170, 10, 150, 21);

        checkTipo.add(radioBtnNoTripulada);
        radioBtnNoTripulada.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        radioBtnNoTripulada.setText("No tripulada");
        radioBtnNoTripulada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnNoTripuladaActionPerformed(evt);
            }
        });
        getContentPane().add(radioBtnNoTripulada);
        radioBtnNoTripulada.setBounds(170, 50, 150, 21);

        checkTipo.add(radioBtnLanzadera);
        radioBtnLanzadera.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        radioBtnLanzadera.setText("Vehiculo lanzadera");
        radioBtnLanzadera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnLanzaderaActionPerformed(evt);
            }
        });
        getContentPane().add(radioBtnLanzadera);
        radioBtnLanzadera.setBounds(170, 30, 150, 21);

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Capacidad (Toneladas):");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(0, 280, 160, 19);

        empujeNave.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 1.0f));
        getContentPane().add(empujeNave);
        empujeNave.setBounds(170, 140, 150, 21);

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Numero de tripulantes:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(0, 310, 160, 19);

        tripulantesNave.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        getContentPane().add(tripulantesNave);
        tripulantesNave.setBounds(170, 310, 150, 21);

        capacidadNave.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 5));
        getContentPane().add(capacidadNave);
        capacidadNave.setBounds(170, 280, 150, 21);

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Propósito:");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(40, 340, 120, 19);

        origenNave.setToolTipText("");
        getContentPane().add(origenNave);
        origenNave.setBounds(170, 110, 110, 21);

        propositoNave.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Reparación", "Mantenimiento", "Investigación" }));
        getContentPane().add(propositoNave);
        propositoNave.setBounds(170, 340, 150, 21);

        nuevoOrigen.setText("...");
        nuevoOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoOrigenActionPerformed(evt);
            }
        });
        getContentPane().add(nuevoOrigen);
        nuevoOrigen.setBounds(290, 110, 30, 21);

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Peso (Kg):");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(0, 250, 160, 19);

        pesoNave.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        getContentPane().add(pesoNave);
        pesoNave.setBounds(170, 250, 150, 21);

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("* Campo obligatorio");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(360, 350, 130, 21);

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText(" *");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(320, 170, 10, 19);

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText(" *");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(320, 80, 10, 19);

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        jLabel15.setText(" *");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(320, 310, 10, 19);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        combustibleNave.setColumns(20);
        combustibleNave.setRows(2);
        combustibleNave.setTabSize(5);
        jScrollPane1.setViewportView(combustibleNave);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(170, 170, 150, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagenActionPerformed
        jFileChooser1.setDialogTitle("Seleccionar imagen...");
        int r = jFileChooser1.showOpenDialog(this);
        if (r == JFileChooser.APPROVE_OPTION) {
            this.imagen = jFileChooser1.getSelectedFile().getAbsolutePath();
            ImageIcon img = new ImageIcon(new ImageIcon(jFileChooser1.getSelectedFile().getAbsolutePath()).getImage().getScaledInstance(ImagenNave.getWidth(), ImagenNave.getHeight(), Image.SCALE_DEFAULT));
            ImagenNave.setIcon(img);
        }
    }//GEN-LAST:event_btnImagenActionPerformed

    private void btnGuardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar1ActionPerformed
        if(this.nombreNave.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Error, el nombre no puede ser vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else if(this.empujeNave.getValue().equals(0)){
            JOptionPane.showMessageDialog(this, "Error, el empuje de la nave no puede ser cero", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else if(this.combustibleNave.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Error, el combustible no puede ser vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else if(this.pesoNave.getValue().equals(0)){
            JOptionPane.showMessageDialog(this, "Error, el peso de la nave no puede ser cero", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(this.radioBtnTripulada.isSelected()){ // RadioButton "Tripulada" seleccionado
            if(this.tripulantesNave.getValue().equals(0)){
                JOptionPane.showMessageDialog(this, "Error, el numero de tripulantes no puede ser cero", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            Tripulada v = new Tripulada();
            v.setNombre(this.nombreNave.getText());
            
            v.setOrigen(ICN.getOrigen(this.origenNave.getSelectedItem().toString().trim()));
            v.setEmpuje( (float) this.empujeNave.getValue());
            if(!"".equals(imagen)){
                try {
                    v.setImagen(convertirImagen(this.imagen));
                } catch (IOException ex) {
                    Logger.getLogger(NuevaNave.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    String resource = getClass().getResource( "/recursos/nave-default.png" ).getPath();
                    resource = resource.replace("%20", " ");
                    v.setImagen(convertirImagen(resource));
                } catch (IOException ex) {
                    Logger.getLogger(NuevaNave.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            v.setCombustible(this.combustibleNave.getText());
            Date hoy = new Date();
            v.setInicioActividad(hoy);
            v.setFinActividad(this.finActividad.getDate());
            v.setPeso((int)this.pesoNave.getValue());
            
            v.setProposito(this.propositoNave.getSelectedItem().toString());
            v.setTripulantes((int) this.tripulantesNave.getValue());
            
            if(ICN.save(v)){
                JOptionPane.showMessageDialog(this, "Nave espacial tripulada añadida con éxito! ", "Exito", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar la Nave ", "Error", JOptionPane.ERROR_MESSAGE);
                
            }
            
        } else if(this.radioBtnNoTripulada.isSelected()){ // RadioButton "No tripulada" seleccionado
            NoTripulada v = new NoTripulada();
            v.setNombre(this.nombreNave.getText());
            
            v.setOrigen(ICN.getOrigen(this.origenNave.getSelectedItem().toString().trim()));
            v.setEmpuje((float) this.empujeNave.getValue());
            if(!"".equals(imagen)){
                try {
                    v.setImagen(convertirImagen(this.imagen));
                } catch (IOException ex) {
                    Logger.getLogger(NuevaNave.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    String resource = getClass().getResource( "/recursos/nave-default.png" ).getPath();
                    resource = resource.replace("%20", " ");
                    v.setImagen(convertirImagen(resource));
                } catch (IOException ex) {
                    Logger.getLogger(NuevaNave.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            v.setCombustible(this.combustibleNave.getText());
            Date hoy = new Date();
            v.setInicioActividad(hoy);
            v.setFinActividad(this.finActividad.getDate());
            v.setPeso((int)this.pesoNave.getValue());
            
            if(ICN.save(v)){
                JOptionPane.showMessageDialog(this, "Nave espacial no tripulada añadida con éxito! ", "Exito", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar la Nave ", "Error", JOptionPane.ERROR_MESSAGE);
                
            }
        } else if(this.radioBtnLanzadera.isSelected()){ // RadioButton "Lanzadera" seleccionado
            if(this.capacidadNave.getValue().equals(0)){
                JOptionPane.showMessageDialog(this, "Error, la capacidad de la nave no puede ser cero", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            VehiculoLanzadera v = new VehiculoLanzadera();
            v.setNombre(this.nombreNave.getText());
            
            v.setOrigen(ICN.getOrigen(this.origenNave.getSelectedItem().toString().trim()));
            v.setEmpuje((float) this.empujeNave.getValue());
            if(!"".equals(imagen)){
                try {
                    v.setImagen(convertirImagen(this.imagen));
                } catch (IOException ex) {
                    Logger.getLogger(NuevaNave.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    String resource = getClass().getResource( "/recursos/nave-default.png" ).getPath();
                    resource = resource.replace("%20", " ");
                    v.setImagen(convertirImagen(resource));
                } catch (IOException ex) {
                    Logger.getLogger(NuevaNave.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            v.setCombustible(this.combustibleNave.getText());
            Date hoy = new Date();
            v.setInicioActividad(hoy);
            v.setFinActividad(this.finActividad.getDate());
            v.setPeso((int)this.pesoNave.getValue());
            v.setCapacidad((int) this.capacidadNave.getValue());
            
            
            if(ICN.save(v)){
                JOptionPane.showMessageDialog(this, "Nave espacial vehiculo de lanzadera añadida con éxito! ", "Exito", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar la Nave ", "Error", JOptionPane.ERROR_MESSAGE);
                
            }
        }
        this.dispose();
//        Conexion.getInstance().save(v);

    }//GEN-LAST:event_btnGuardar1ActionPerformed

    private void radioBtnNoTripuladaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnNoTripuladaActionPerformed
        comprobarRadios();
    }//GEN-LAST:event_radioBtnNoTripuladaActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        comprobarRadios();
        
    }//GEN-LAST:event_formWindowActivated

    private void radioBtnTripuladaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnTripuladaActionPerformed
        comprobarRadios();
    }//GEN-LAST:event_radioBtnTripuladaActionPerformed

    private void radioBtnLanzaderaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnLanzaderaActionPerformed
        comprobarRadios();
    }//GEN-LAST:event_radioBtnLanzaderaActionPerformed

    private void nuevoOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoOrigenActionPerformed
        String resultado = "";
        Object result = (String)JOptionPane.showInputDialog(
               null,
               "Ingrese un nuevo Origen",
               "Nuevo Origen",
               JOptionPane.PLAIN_MESSAGE,
               null,
               null, 
               ""
            );
        try {
            resultado = result.toString();
            if (!"".equals(resultado.trim()) && result != null && result != "") {
                if(ICN.existeOrigen(resultado.trim())){
                    JOptionPane.showMessageDialog(null, "Error, ya existe ese origen en el sistema", "Error", JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
                System.out.println("You selected:" + resultado);
                Origen o = new Origen();
                o.setNombre(resultado);
                ICN.save(o);
                this.origenNave.removeAllItems();
                for(Origen p : ICN.getOrigenes()){
                    this.origenNave.addItem(p.getNombre());
                    System.out.println((p.getNombre()));
                }
            } else {
                //ERROR
                JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            // DIO CANCELAR
        }
        
    }//GEN-LAST:event_nuevoOrigenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevaNave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevaNave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevaNave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevaNave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NuevaNave().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ImagenNave;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JButton btnImagen;
    private javax.swing.JSpinner capacidadNave;
    private javax.swing.ButtonGroup checkTipo;
    private javax.swing.JTextArea combustibleNave;
    private javax.swing.JSpinner empujeNave;
    private com.toedter.calendar.JDateChooser finActividad;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombreNave;
    private javax.swing.JButton nuevoOrigen;
    private javax.swing.JComboBox<String> origenNave;
    private javax.swing.JSpinner pesoNave;
    private javax.swing.JComboBox<String> propositoNave;
    private javax.swing.JRadioButton radioBtnLanzadera;
    private javax.swing.JRadioButton radioBtnNoTripulada;
    private javax.swing.JRadioButton radioBtnTripulada;
    private javax.swing.JSpinner tripulantesNave;
    // End of variables declaration//GEN-END:variables

    private void comprobarRadios() {
        if(this.radioBtnTripulada.isSelected()){ // RadioButton "Tripulada" seleccionado
            this.tripulantesNave.setEnabled(true);
            this.capacidadNave.setEnabled(false);
            this.propositoNave.setEnabled(true);
        } else if(this.radioBtnNoTripulada.isSelected()){ // RadioButton "No tripulada" seleccionado
            this.tripulantesNave.setEnabled(false);
            this.capacidadNave.setEnabled(false);   
            this.propositoNave.setEnabled(false);
        } else if(this.radioBtnLanzadera.isSelected()){ // RadioButton "Lanzadera" seleccionado
            this.tripulantesNave.setEnabled(false);
            this.capacidadNave.setEnabled(true);     
            this.propositoNave.setEnabled(false);
        }
    }
}
