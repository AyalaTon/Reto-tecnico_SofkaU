/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Clases.NaveEspacial;
import Clases.NoTripulada;
import Clases.Tripulada;
import Clases.VehiculoLanzadera;
import Fabrica.Fabrica;
import Interfaces.IControladorNaves;
import java.util.Date;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author milto
 */
public class Despegue extends javax.swing.JFrame {
    private NaveEspacial nave;
    private IControladorNaves ICN;
    /**
     * Creates new form Despegue
     */
    public Despegue() {
        initComponents();
        this.setTitle("Despegue de nave");
        this.setLocationRelativeTo(null);
    }
    public Despegue(NaveEspacial nave, String tipoNave) {
        initComponents();
        this.setTitle("Despegue de nave");
        ICN = Fabrica.getInstance().getIControladorNaves();
        this.setLocationRelativeTo(null);
        this.nave = nave;
        this.jLabel4.setText("Nave: " + tipoNave);
        
        if(tipoNave != "Vehiculo Lanzadera"){
            Iterator<NaveEspacial> it = ICN.getVehiculosLanzadera().iterator();
            DefaultTableModel modeloTable = (DefaultTableModel) tablaVehiculosLanzadoras.getModel();
            modeloTable.setRowCount(0);
            while (it.hasNext()) {
                NaveEspacial next = it.next();
                Object[] fila = new Object[1];
                fila[0] = next;// Es el objeto
                modeloTable.addRow(fila);
            }
        } else {
            this.cmbTipoDespegue.removeAllItems();
            this.cmbTipoDespegue.addItem("Solo");
            this.cmbTipoDespegue.addItem("Nave acoplada");
            Iterator<NaveEspacial> it = ICN.getTripuladasAndNoTripuladas().iterator();
            DefaultTableModel modeloTable = (DefaultTableModel) tablaVehiculosLanzadoras.getModel();
            modeloTable.setRowCount(0);
            while (it.hasNext()) {
                NaveEspacial next = it.next();
                Object[] fila = new Object[1];
                fila[0] = next;// Es el objeto
                modeloTable.addRow(fila);
            }
        }
        this.jPanel1.setVisible(false);
        
        if(tipoNave == "No Tripulada"){
            jSpinner1.setVisible(false);
            jSpinner2.setVisible(false);
            jLabel3.setVisible(false);
            jLabel5.setVisible(false);
        } else if(tipoNave == "Tripulada"){
            Tripulada p = (Tripulada) nave;
            this.jSpinner1.setValue(p.getTripulantes());
            this.jSpinner1.setEnabled(false);
        } else {
            jSpinner1.setVisible(false);
            jSpinner2.setVisible(false);
            jLabel3.setVisible(false);
            jLabel5.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaVehiculosLanzadoras = new javax.swing.JTable();
        cmbTipoDespegue = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(520, 380));
        setMinimumSize(new java.awt.Dimension(520, 380));
        setPreferredSize(new java.awt.Dimension(520, 380));
        setResizable(false);
        setSize(new java.awt.Dimension(520, 380));
        getContentPane().setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/despegue.gif"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(210, 10, 290, 290);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Despegue");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 50, 80, 19);

        jPanel1.setLayout(null);

        tablaVehiculosLanzadoras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Naves disponibles"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaVehiculosLanzadoras);
        if (tablaVehiculosLanzadoras.getColumnModel().getColumnCount() > 0) {
            tablaVehiculosLanzadoras.getColumnModel().getColumn(0).setResizable(false);
        }

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 10, 190, 140);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 80, 190, 160);

        cmbTipoDespegue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Solo", "Vehiculo lanzadera" }));
        cmbTipoDespegue.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoDespegueItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbTipoDespegue);
        cmbTipoDespegue.setBounds(90, 50, 110, 24);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Capacidad:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 240, 80, 20);

        jButton1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jButton1.setText("Despegar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(10, 310, 90, 26);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setText("Nave: ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 20, 190, 20);

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        getContentPane().add(jSpinner1);
        jSpinner1.setBounds(100, 240, 100, 20);

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Tripulantes:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 270, 80, 20);

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        getContentPane().add(jSpinner2);
        jSpinner2.setBounds(100, 270, 100, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(cmbTipoDespegue.getSelectedIndex() == 1){
            if(tablaVehiculosLanzadoras.getSelectedRow() == -1){
                JOptionPane.showMessageDialog(null, "Error, ningun Vahiculo lanzadera seleccionado", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        if((int) jSpinner1.getValue() < (int) jSpinner2.getValue()){
            JOptionPane.showMessageDialog(null, "Error, se exedió la capacidad de la nave", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int resultado = JOptionPane.showConfirmDialog(null, "¿Seguro?", "Advertencia", JOptionPane.YES_NO_OPTION);
        if(nave instanceof Tripulada){
            Tripulada t = (Tripulada) nave;
            this.nave = t;
            if (resultado == JOptionPane.YES_OPTION) { //DIO SI
                if(cmbTipoDespegue.getSelectedIndex() == 0){ // SOLO
                    if(t.despegar( (int) jSpinner2.getValue())){
                        JOptionPane.showMessageDialog(null, "Despegue con éxito!", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Falló el despegue", "Error", JOptionPane.INFORMATION_MESSAGE);
                        ICN.merge(t);
                    }
                } else if(cmbTipoDespegue.getSelectedIndex() == 1){
                    VehiculoLanzadera vehiculoUtilizado = (VehiculoLanzadera) tablaVehiculosLanzadoras.getModel().getValueAt(tablaVehiculosLanzadoras.getSelectedRow(), 0);
                    if(t.despegar(vehiculoUtilizado, (int) jSpinner2.getValue())){
                        JOptionPane.showMessageDialog(null, "Despegue con éxito!", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Falló el despegue", "Error", JOptionPane.INFORMATION_MESSAGE);
                        ICN.merge(t);
                        ICN.merge(vehiculoUtilizado);
                    }
                }
                this.dispose();
            } else if (resultado == JOptionPane.NO_OPTION) { //DIO NO
                return;
            } else {
                return;
            }
        } else if(nave instanceof NoTripulada){
            NoTripulada t = (NoTripulada) nave;
            this.nave = t;
            if (resultado == JOptionPane.YES_OPTION) { //DIO SI
                if(cmbTipoDespegue.getSelectedIndex() == 0){ // SOLO
                    if(t.despegar()){
                        JOptionPane.showMessageDialog(null, "Despegue con éxito!", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Falló el despegue", "Error", JOptionPane.INFORMATION_MESSAGE);
                        ICN.merge(t);
                    }
                } else if(cmbTipoDespegue.getSelectedIndex() == 1){
                    VehiculoLanzadera vehiculoUtilizado = (VehiculoLanzadera) tablaVehiculosLanzadoras.getModel().getValueAt(tablaVehiculosLanzadoras.getSelectedRow(), 0);
                    if(t.despegar(vehiculoUtilizado)){
                        JOptionPane.showMessageDialog(null, "Despegue con éxito!", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Falló el despegue", "Error", JOptionPane.INFORMATION_MESSAGE);
                        ICN.merge(t);
                        ICN.merge(vehiculoUtilizado);
                    }
                }
                this.dispose();
            } else if (resultado == JOptionPane.NO_OPTION) { //DIO NO
                return;
            } else {
                return;
            }
        } else if(nave instanceof VehiculoLanzadera){
            VehiculoLanzadera t = (VehiculoLanzadera) nave;
            this.nave = t;
            
            if (resultado == JOptionPane.YES_OPTION) { //DIO SI
                if(cmbTipoDespegue.getSelectedIndex() == 0){ // SOLO
                    if(t.despegar()){
                        JOptionPane.showMessageDialog(null, "Despegue con éxito!", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Falló el despegue", "Error", JOptionPane.INFORMATION_MESSAGE);
                        ICN.merge(t);
                    }
                } else if(cmbTipoDespegue.getSelectedIndex() == 1){
                    NaveEspacial vehiculoUtilizado = (NaveEspacial) tablaVehiculosLanzadoras.getModel().getValueAt(tablaVehiculosLanzadoras.getSelectedRow(), 0);
                    if(t.despegar(vehiculoUtilizado)){
                        JOptionPane.showMessageDialog(null, "Despegue con éxito!", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Falló el despegue", "Error", JOptionPane.INFORMATION_MESSAGE);
                        ICN.merge(t);
                        ICN.merge(vehiculoUtilizado);
                    }
                }
                this.dispose();
            } else if (resultado == JOptionPane.NO_OPTION) { //DIO NO
                return;
            } else {
                return;
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmbTipoDespegueItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoDespegueItemStateChanged
        if(cmbTipoDespegue.getSelectedIndex() == 0){
            this.jPanel1.setVisible(false);
        } else {
            this.jPanel1.setVisible(true);
        }
    }//GEN-LAST:event_cmbTipoDespegueItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Despegue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Despegue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Despegue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Despegue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Despegue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbTipoDespegue;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTable tablaVehiculosLanzadoras;
    // End of variables declaration//GEN-END:variables
}
