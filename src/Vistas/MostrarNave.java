/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Clases.NaveEspacial;
import Clases.NoTripulada;
import Clases.Tripulada;
import Clases.VehiculoLanzadera;
import Fabrica.Fabrica;
import Interfaces.IControladorNaves;
import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author milto
 */
public class MostrarNave extends javax.swing.JFrame {
    private IControladorNaves ICN;
    private NaveEspacial nave;
    private String imagen = "";
    private String tipoNaveEspacial = "";
    /**
     * Creates new form MostrarNave
     */
    public MostrarNave() {
        initComponents();
        this.setTitle("Nave espacial");
        this.setLocationRelativeTo(null);
    }
    public MostrarNave(NaveEspacial nave) {
        initComponents();
        this.setTitle("Nave espacial");
        this.setLocationRelativeTo(null);
        ICN = Fabrica.getInstance().getIControladorNaves();
        System.out.println("Nave:" + nave.getNombre());
        Date today  = new Date();
        if(nave.getFinActividad().before(today)){
            this.btnfinalizarActividad.setEnabled(false);
            this.btnDespegar.setEnabled(false);
        }
        
        String tipo = "";
        if(nave instanceof Tripulada){
            tipo = "Tripulada";
            Tripulada t = (Tripulada) nave;
            this.nave = t;
            tripulantesNave.setValue(t.getTripulantes());
            propositoNave.setText(t.getProposito());
        } else if(nave instanceof NoTripulada){
            tipo = "No Tripulada";
            NoTripulada t = (NoTripulada) nave;
            this.nave = t;
        } else if(nave instanceof VehiculoLanzadera){
            tipo = "Vehiculo Lanzadera";
            VehiculoLanzadera t = (VehiculoLanzadera) nave;
            this.nave = t;
            capacidadNave.setValue(t.getCapacidad());
        }
        tipoNaveEspacial = tipo;
        
        tipoNave.setText(tipo);
        nombreNave.setText(nave.getNombre());
        origenNave.setText(nave.getOrigen().getNombre());
        empujeNave.setValue(nave.getEmpuje());
        combustibleNave.setText(nave.getCombustible());
        inicioActividad.setDate(nave.getInicioActividad());
        finActividad.setDate(nave.getFinActividad());
        pesoNave.setValue(nave.getPeso());
        
        tripulantesNave.setEnabled(false);
        propositoNave.setEnabled(false);
        capacidadNave.setEnabled(false);
        tipoNave.setEnabled(false);
        nombreNave.setEnabled(false);
        origenNave.setEnabled(false);
        empujeNave.setEnabled(false);
        combustibleNave.setEnabled(false);
        inicioActividad.setEnabled(false);
        finActividad.setEnabled(false);
        pesoNave.setEnabled(false);
        btnImagen.setEnabled(false);
        
        
        ImagenNave.setIcon(getFotoImage(nave));
    }
    public byte[] convertirImagen(String path) throws IOException {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        BufferedImage img = ImageIO.read(new File(path));
        ImageIO.write(img, "png", baos);
        baos.flush();
        String base64String = Base64.encode(baos.toByteArray());
        baos.close();
        return Base64.decode(base64String);
    }
    
    public ImageIcon getFotoImage(NaveEspacial auxC) {
        Image aux = new ImageIcon(auxC.getImagen()).getImage();
        ImageIcon foto = new ImageIcon(aux.getScaledInstance(ImagenNave.getWidth(), ImagenNave.getHeight(), Image.SCALE_DEFAULT));
        return foto;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        propositoNave = new javax.swing.JTextField();
        finActividad = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        empujeNave = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        tripulantesNave = new javax.swing.JSpinner();
        capacidadNave = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        pesoNave = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        combustibleNave = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        origenNave = new javax.swing.JTextField();
        tipoNave = new javax.swing.JTextField();
        inicioActividad = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        nombreNave = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        ImagenNave = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnfinalizarActividad = new javax.swing.JButton();
        btnDespegar = new javax.swing.JButton();
        btnImagen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(660, 425));
        setMinimumSize(new java.awt.Dimension(660, 425));
        setPreferredSize(new java.awt.Dimension(660, 425));
        setResizable(false);
        setSize(new java.awt.Dimension(660, 425));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Fin de actividad:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 210, 120, 19);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Origen:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 70, 120, 19);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Empuje (Toneladas):");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 100, 160, 19);

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Combustible:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 130, 120, 19);

        propositoNave.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        getContentPane().add(propositoNave);
        propositoNave.setBounds(160, 330, 150, 21);

        finActividad.setDateFormatString("d/MM/yyyy");
        getContentPane().add(finActividad);
        finActividad.setBounds(160, 210, 150, 21);

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Nombre:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(30, 40, 120, 19);

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Capacidad (Toneladas):");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(0, 270, 160, 19);

        empujeNave.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 1.0f));
        getContentPane().add(empujeNave);
        empujeNave.setBounds(160, 100, 150, 21);

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Numero de tripulantes:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(0, 300, 160, 19);

        tripulantesNave.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        getContentPane().add(tripulantesNave);
        tripulantesNave.setBounds(160, 300, 150, 21);

        capacidadNave.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 5));
        getContentPane().add(capacidadNave);
        capacidadNave.setBounds(160, 270, 150, 21);

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Prop√≥sito:");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(30, 330, 120, 19);

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Peso (Kg):");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(0, 240, 160, 19);

        pesoNave.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        getContentPane().add(pesoNave);
        pesoNave.setBounds(160, 240, 150, 21);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        combustibleNave.setColumns(20);
        combustibleNave.setRows(2);
        combustibleNave.setTabSize(5);
        jScrollPane1.setViewportView(combustibleNave);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(160, 130, 150, 40);

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Tipo:");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(30, 10, 120, 19);

        origenNave.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        getContentPane().add(origenNave);
        origenNave.setBounds(160, 70, 150, 21);

        tipoNave.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        getContentPane().add(tipoNave);
        tipoNave.setBounds(160, 10, 150, 21);

        inicioActividad.setDateFormatString("d/MM/yyyy");
        getContentPane().add(inicioActividad);
        inicioActividad.setBounds(160, 180, 150, 21);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Inicio de actividad:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 180, 120, 19);

        nombreNave.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        getContentPane().add(nombreNave);
        nombreNave.setBounds(160, 40, 150, 21);

        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        jPanel12.setLayout(null);
        jPanel12.add(ImagenNave);
        ImagenNave.setBounds(0, 0, 320, 300);

        getContentPane().add(jPanel12);
        jPanel12.setBounds(320, 10, 320, 300);

        btnEditar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditar);
        btnEditar.setBounds(568, 360, 70, 26);

        btnCancelar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar);
        btnCancelar.setBounds(480, 360, 80, 26);

        btnfinalizarActividad.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btnfinalizarActividad.setText("Finalizar Actividad");
        btnfinalizarActividad.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnfinalizarActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfinalizarActividadActionPerformed(evt);
            }
        });
        getContentPane().add(btnfinalizarActividad);
        btnfinalizarActividad.setBounds(270, 360, 123, 26);

        btnDespegar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btnDespegar.setText("Despegar");
        btnDespegar.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnDespegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDespegarActionPerformed(evt);
            }
        });
        getContentPane().add(btnDespegar);
        btnDespegar.setBounds(180, 360, 81, 26);

        btnImagen.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btnImagen.setText("Imagen");
        btnImagen.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagenActionPerformed(evt);
            }
        });
        getContentPane().add(btnImagen);
        btnImagen.setBounds(400, 360, 68, 26);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnfinalizarActividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfinalizarActividadActionPerformed
        this.nave.finalizarActividad();
        
        if(ICN.merge(nave)){
            JOptionPane.showMessageDialog(this, "Nave espacial actualizada con √©xito! ", "Exito", JOptionPane.INFORMATION_MESSAGE);
            this.btnfinalizarActividad.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(this, "Error al actualizar la Nave ", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnfinalizarActividadActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if(this.btnEditar.getText() == "Editar"){
            combustibleNave.setEnabled(true);
            nombreNave.setEnabled(true);
            btnImagen.setEnabled(true);
            btnEditar.setText("Guardar");
        } else if(this.btnEditar.getText() == "Guardar"){
            if(this.nombreNave.getText().trim().equals("")){
                JOptionPane.showMessageDialog(this, "Error, el nombre no puede ser vacio", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } else if(this.combustibleNave.getText().trim().equals("")){
                JOptionPane.showMessageDialog(this, "Error, el combustible no puede ser vacio", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            this.nave.setCombustible(combustibleNave.getText().trim());
            this.nave.setNombre(nombreNave.getText().trim());
            if(!"".equals(imagen)){
                try {
                    this.nave.setImagen(convertirImagen(this.imagen));
                } catch (IOException ex) {
                    Logger.getLogger(NuevaNave.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    String resource = getClass().getResource( "/recursos/nave-default.png" ).getPath();
                    resource = resource.replace("%20", " ");
                    this.nave.setImagen(convertirImagen(resource));
                } catch (IOException ex) {
                    Logger.getLogger(NuevaNave.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(ICN.merge(nave)){
                JOptionPane.showMessageDialog(this, "Nave espacial actualizada con √©xito! ", "Exito", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar la Nave ", "Error", JOptionPane.ERROR_MESSAGE);
            }
            btnEditar.setText("Editar");
            this.dispose();
        }
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnDespegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDespegarActionPerformed
        int resultado = JOptionPane.showConfirmDialog(null, "Esto iniciar√° un test de despegue de la Nave para probar el modelo, ¬øDesea continuar?", "Advertencia", JOptionPane.YES_NO_OPTION);
        if (resultado == JOptionPane.YES_OPTION) { //DIO SI
            Despegue ventana = new Despegue(this.nave, tipoNaveEspacial);
            ventana.setVisible(true);
        } else if (resultado == JOptionPane.NO_OPTION) { //DIO NO
            return;
        } else {
            return;
        }
        
    }//GEN-LAST:event_btnDespegarActionPerformed

    private void btnImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagenActionPerformed
        jFileChooser1.setDialogTitle("Seleccionar imagen...");
        int r = jFileChooser1.showOpenDialog(this);
        if (r == JFileChooser.APPROVE_OPTION) {
            this.imagen = jFileChooser1.getSelectedFile().getAbsolutePath();
            ImageIcon img = new ImageIcon(new ImageIcon(jFileChooser1.getSelectedFile().getAbsolutePath()).getImage().getScaledInstance(ImagenNave.getWidth(), ImagenNave.getHeight(), Image.SCALE_DEFAULT));
            ImagenNave.setIcon(img);
        }
    }//GEN-LAST:event_btnImagenActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained

    }//GEN-LAST:event_formFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MostrarNave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MostrarNave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MostrarNave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MostrarNave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MostrarNave().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ImagenNave;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDespegar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnImagen;
    private javax.swing.JButton btnfinalizarActividad;
    private javax.swing.JSpinner capacidadNave;
    private javax.swing.JTextArea combustibleNave;
    private javax.swing.JSpinner empujeNave;
    private com.toedter.calendar.JDateChooser finActividad;
    private com.toedter.calendar.JDateChooser inicioActividad;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombreNave;
    private javax.swing.JTextField origenNave;
    private javax.swing.JSpinner pesoNave;
    private javax.swing.JTextField propositoNave;
    private javax.swing.JTextField tipoNave;
    private javax.swing.JSpinner tripulantesNave;
    // End of variables declaration//GEN-END:variables
}
