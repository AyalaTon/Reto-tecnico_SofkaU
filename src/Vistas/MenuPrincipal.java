/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Clases.TextPrompt;
import BD.Conexion;
import Clases.NaveEspacial;
import Clases.NoTripulada;
import Clases.Origen;
import Clases.Tripulada;
import Fabrica.Fabrica;
import Interfaces.IControladorNaves;
import java.awt.Font;
import java.awt.TextField;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author milto
 */
public class MenuPrincipal extends javax.swing.JFrame {

    private IControladorNaves ICN;
//    private List<NaveEspacial> naves;
    public List<NaveEspacial> naves = new ArrayList<>();
    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal() {
        initComponents();
        this.setTitle("Menu principal");
        this.setLocationRelativeTo(null);
        ICN = Fabrica.getInstance().getIControladorNaves();
        naves = ICN.getNaves(); 
        this.cmbOrigen.removeAllItems();
        for(Origen p : ICN.getOrigenes()){
            this.cmbOrigen.addItem(p.getNombre());
            System.out.println((p.getNombre()));
        }
        TextPrompt placeholder = new TextPrompt("Buscar...", buscador);
        placeholder.changeAlpha(0.75f);
        placeholder.changeStyle(Font.ITALIC);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaNaves = new javax.swing.JTable();
        buscador = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        checkActiva = new javax.swing.JCheckBox();
        cmbActiva = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        checkOrigen = new javax.swing.JCheckBox();
        cmbOrigen = new javax.swing.JComboBox<>();
        checkTipo = new javax.swing.JCheckBox();
        cmbTipo = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 500));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        tablaNaves.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tablaNaves.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Origen", "Combustible", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaNaves.setToolTipText("");
        tablaNaves.setRowHeight(20);
        tablaNaves.setShowHorizontalLines(false);
        tablaNaves.setShowVerticalLines(false);
        tablaNaves.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaNavesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaNaves);
        if (tablaNaves.getColumnModel().getColumnCount() > 0) {
            tablaNaves.getColumnModel().getColumn(0).setResizable(false);
            tablaNaves.getColumnModel().getColumn(1).setResizable(false);
            tablaNaves.getColumnModel().getColumn(2).setResizable(false);
            tablaNaves.getColumnModel().getColumn(3).setResizable(false);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 140, 770, 290);

        buscador.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        buscador.setText("Buscar...");
        buscador.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                buscadorCaretUpdate(evt);
            }
        });
        buscador.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                buscadorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                buscadorFocusLost(evt);
            }
        });
        getContentPane().add(buscador);
        buscador.setBounds(10, 30, 770, 23);

        jPanel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        jPanel16.setLayout(null);

        checkActiva.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        checkActiva.setText("Activas:");
        checkActiva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActivaActionPerformed(evt);
            }
        });
        jPanel16.add(checkActiva);
        checkActiva.setBounds(530, 20, 70, 24);

        cmbActiva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No" }));
        cmbActiva.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbActivaItemStateChanged(evt);
            }
        });
        jPanel16.add(cmbActiva);
        cmbActiva.setBounds(600, 20, 60, 24);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Filtros");
        jPanel16.add(jLabel1);
        jLabel1.setBounds(20, 20, 50, 19);

        checkOrigen.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        checkOrigen.setText("Origen:");
        checkOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOrigenActionPerformed(evt);
            }
        });
        jPanel16.add(checkOrigen);
        checkOrigen.setBounds(90, 20, 70, 24);

        cmbOrigen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOrigenItemStateChanged(evt);
            }
        });
        jPanel16.add(cmbOrigen);
        cmbOrigen.setBounds(160, 20, 110, 24);

        checkTipo.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        checkTipo.setText("Tipo:");
        checkTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkTipoActionPerformed(evt);
            }
        });
        jPanel16.add(checkTipo);
        checkTipo.setBounds(300, 20, 60, 24);

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tripulada", "No tripulada", "Vehiculo lanzadera" }));
        cmbTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoItemStateChanged(evt);
            }
        });
        jPanel16.add(cmbTipo);
        cmbTipo.setBounds(360, 20, 140, 24);

        getContentPane().add(jPanel16);
        jPanel16.setBounds(10, 70, 770, 60);

        jMenuBar1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jMenu1.setText("Naves");

        jMenuItem1.setText("Nueva");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        filtrar();
    }//GEN-LAST:event_formWindowActivated

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        NuevaNave ventana = new NuevaNave();
        ventana.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void buscadorCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_buscadorCaretUpdate
        filtrar();
    }//GEN-LAST:event_buscadorCaretUpdate
    
    private void buscadorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buscadorFocusGained
        if(buscador.getText().equals("Buscar...")){
            buscador.setText("");
        }
    }//GEN-LAST:event_buscadorFocusGained

    private void buscadorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buscadorFocusLost
        
    }//GEN-LAST:event_buscadorFocusLost

    private void checkActivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActivaActionPerformed
        filtrar();
    }//GEN-LAST:event_checkActivaActionPerformed

    private void checkOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOrigenActionPerformed
        filtrar();
    }//GEN-LAST:event_checkOrigenActionPerformed

    private void checkTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkTipoActionPerformed
        filtrar();
    }//GEN-LAST:event_checkTipoActionPerformed

    private void cmbOrigenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOrigenItemStateChanged
        filtrar();
    }//GEN-LAST:event_cmbOrigenItemStateChanged

    private void cmbTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoItemStateChanged
        filtrar();
    }//GEN-LAST:event_cmbTipoItemStateChanged

    private void cmbActivaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbActivaItemStateChanged
        filtrar();
    }//GEN-LAST:event_cmbActivaItemStateChanged

    private void tablaNavesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaNavesMouseClicked
        if(evt.getClickCount() == 2){
            MostrarNave ventana = new MostrarNave((NaveEspacial) tablaNaves.getModel().getValueAt(tablaNaves.getSelectedRow(),0));
            ventana.setVisible(true);
        }
    }//GEN-LAST:event_tablaNavesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField buscador;
    private javax.swing.JCheckBox checkActiva;
    private javax.swing.JCheckBox checkOrigen;
    private javax.swing.JCheckBox checkTipo;
    private javax.swing.JComboBox<String> cmbActiva;
    private javax.swing.JComboBox<String> cmbOrigen;
    private javax.swing.JComboBox<String> cmbTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaNaves;
    // End of variables declaration//GEN-END:variables

    private void filtrar() {
        Iterator<NaveEspacial> it = ICN.buscarNaves(buscador.getText()).iterator();
        DefaultTableModel modeloTable = (DefaultTableModel) tablaNaves.getModel();
        modeloTable.setRowCount(0);
        
        String origen = "";
        String tipoNave = "";
        String activa = "";
        if(this.checkOrigen.isSelected()){
            origen = this.cmbOrigen.getSelectedItem().toString();
        }
        if(this.checkTipo.isSelected()){
            tipoNave = this.cmbTipo.getSelectedItem().toString().trim();
        }
        if(this.checkActiva.isSelected()){
            activa = this.cmbActiva.getSelectedItem().toString().trim();
        }
        boolean correcto = false;
        
        
        while (it.hasNext()) {
            correcto = true;
            NaveEspacial next = it.next();
            String tipo = "";
            if(next instanceof Tripulada){
                tipo = "Tripulada";
            } else if(next instanceof NoTripulada){
                tipo = "No tripulada";
            } else {
                tipo = "Vehiculo lanzadera";
            }
            
            if(!"".equals(origen) && next.getOrigen().getNombre() != origen){ // filtro de origen tildado
                correcto = false;
            }
            if(!"".equals(tipoNave) && tipo != tipoNave){ // filtro de tipo tildado
                correcto = false;
            }
            Date today = new Date();
            if(!"".equals(activa) && next.getFinActividad() != null){ // filtro de Activo tildado
                if("Si".equals(activa)){ // SI
                    if(next.getFinActividad().before(today)){
                        correcto = false;
                    }
                } else { // NO
                    if(next.getFinActividad().after(today)){
                        correcto = false;
                    }
                }
            }
            
            if(correcto == true){
                Object[] fila = new Object[4];
                fila[0] = next;// Es el objeto
                fila[1] = next.getOrigen();
                fila[2] = next.getCombustible();
                fila[3] = tipo;

                modeloTable.addRow(fila);
            }
        }
    }
}
